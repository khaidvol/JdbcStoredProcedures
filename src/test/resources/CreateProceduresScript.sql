DELIMITER $$
create procedure SHOW_ALL_DATA() 
	begin 
		SELECT * FROM SINGER 
		LEFT JOIN ALBUM ON SINGER.ID = ALBUM.SINGER_ID 
		LEFT JOIN TRACK ON ALBUM.ID = TRACK.ALBUM_ID;
	end;

create procedure SHOW_COUNTED_DATA() 
	begin 
		SELECT SINGER.ID, SINGER.FIRST_NAME, SINGER.LAST_NAME, SINGER.BIRTH_DATE 
		, (SELECT COUNT(ALBUM.ID) FROM ALBUM WHERE ALBUM.SINGER_ID = SINGER.ID) AS NUMBER_OF_ALBUMS 
		, COUNT(TRACK.TITLE) AS NUMBER_OF_TRACKS 
		FROM SINGER 
		LEFT JOIN ALBUM ON SINGER.ID = ALBUM.SINGER_ID 
		LEFT JOIN TRACK ON ALBUM.ID = TRACK.ALBUM_ID 
		GROUP BY SINGER.ID;  
	end;

create procedure SHOW_COUNTED_DATA_FOR_SINGER(IN id INT)
begin
	SELECT SINGER.ID, SINGER.FIRST_NAME, SINGER.LAST_NAME, SINGER.BIRTH_DATE
	, (SELECT COUNT(ALBUM.ID) FROM ALBUM WHERE ALBUM.SINGER_ID = SINGER.ID) AS NUMBER_OF_ALBUMS
	, COUNT(TRACK.TITLE) AS NUMBER_OF_TRACKS
	FROM SINGER
	LEFT JOIN ALBUM ON SINGER.ID = ALBUM.SINGER_ID
	LEFT JOIN TRACK ON ALBUM.ID = TRACK.ALBUM_ID
	WHERE SINGER.ID = id
	GROUP BY SINGER.ID;
	end; 
    
create procedure INSERT_SINGER(IN firstName VARCHAR(255), IN lastName VARCHAR(255), IN date DATE)
	begin
		INSERT INTO SINGER (FIRST_NAME, LAST_NAME, BIRTH_DATE) VALUES (firstName, lastName, date);
	end;

create procedure DELETE_SINGER(IN id INT)
	begin
		DELETE FROM SINGER WHERE ID = id;
	end;

create procedure SHOW_ALL_SINGERS()
	begin
		SELECT * FROM SINGER;
	end;

create procedure INSERT_ALBUM(IN singerId INT, IN title VARCHAR(255), IN date DATE)
	begin
		INSERT INTO ALBUM (SINGER_ID, TITLE, RELEASE_DATE) VALUES (singerId, title, date);
	end;

create procedure DELETE_ALBUM(IN id INT)
	begin
		DELETE FROM ALBUM WHERE ID = id;
	end;

create procedure SHOW_ALL_ALBUMS()
	begin
		SELECT * FROM ALBUM;
	end;

create procedure INSERT_TRACK(IN title VARCHAR(255), IN albumId INT, IN trackId INT, IN duration INT)
	begin
		INSERT INTO TRACK (TITLE, ALBUM_ID, TRACK_ID, DURATION) VALUES (title, albumId, trackId, duration);
	end;

create procedure DELETE_TRACK(IN id INT)
	begin
		DELETE FROM TRACK WHERE ID = id;
	end;

create procedure SHOW_ALL_TRACKS()
	begin
		SELECT * FROM TRACK;
	end; $$
